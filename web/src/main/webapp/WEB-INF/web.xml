<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee" version="3.1">

	<security-role>
		<role-name>admin</role-name>
	</security-role>
	<security-role>
		<role-name>user</role-name>
	</security-role>

	<!-- Use HTTP basic authentication for authenticated routes -->
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>default</realm-name>
	</login-config>

	<!-- Root path for REST API -->
	<servlet-mapping>
		<servlet-name>javax.ws.rs.core.Application</servlet-name>
		<url-pattern>/api/v1/*</url-pattern>
	</servlet-mapping>

	<!-- Authentication requirements for /api/v1/users URLs -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>users_resource</web-resource-name>
			<url-pattern>/api/v1/users</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
			<http-method-omission>POST</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>users_subresources</web-resource-name>
			<url-pattern>/api/v1/users/*</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Authentication requirements for /api/v1/friendships URLs -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>friendships_resource</web-resource-name>
			<url-pattern>/api/v1/friendships</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>friendships_subresources</web-resource-name>
			<url-pattern>/api/v1/friendships/*</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Authentication requirement for /api/v1/wall -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>wall_resource</web-resource-name>
			<url-pattern>/api/v1/wall</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Authentication requirement for /api/v1/posts/* URLs -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>posts_subresources</web-resource-name>
			<url-pattern>/api/v1/posts/*</url-pattern>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- JSF config -->
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
		<param-value>2</param-value>
	</context-param>
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>faces/index.xhtml</welcome-file>
	</welcome-file-list>

	<!-- Additional MIME mappings unknown to Wildfly, so it emits less warnings -->
	<mime-mapping>
		<extension>ico</extension>
		<mime-type>image/x-icon</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>ttf</extension>
		<mime-type>font/ttf</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>woff</extension>
		<mime-type>font/woff</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>eot</extension>
		<mime-type>application/vnd.ms-fontobject</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>map</extension>
		<mime-type>application/json</mime-type>
	</mime-mapping>

	<!--
		Forbid client access to JSF composite components.
		Alternatively, we could place the whole resources folder
		inside WEB-INF, but that's not conventional and convoluted.
		See: https://stackoverflow.com/a/13862712/9366153
	-->
	<security-constraint>
		<web-resource-collection>
			<url-pattern>/faces/javax.faces.resource/comp/*</url-pattern>
			<url-pattern>/faces/resources/comp/*</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>
</web-app>
